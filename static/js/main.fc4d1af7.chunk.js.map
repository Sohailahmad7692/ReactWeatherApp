{"version":3,"sources":["Api.jsx","searchbox.jsx","timer.jsx","App.js","reportWebVitals.js","index.js"],"names":["ApiCall","props","useState","entry","setentry","maxTemp","setmaxTemp","minTemp","setminTemp","long","setLong","lat","setLat","useEffect","fetch","cityName","then","res","json","data","Math","floor","main","temp","temp_max","temp_min","coord","lon","className","id","aria-hidden","SearchBox","city","setcity","finalcity","setfinalcity","type","placeholder","aria-label","onChange","e","target","value","onClick","preventDefault","console","log","Api","Timer","count","setCount","date","Date","days","getDay","day","forEach","val","ind","setInterval","getHours","getMinutes","getSeconds","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAuCeA,MApCf,SAAiBC,GAAO,IAAD,EACIC,mBAAS,IADb,mBACZC,EADY,KACNC,EADM,OAESF,mBAAS,IAFlB,mBAEZG,EAFY,KAEHC,EAFG,OAGQJ,mBAAS,IAHjB,mBAGZK,EAHY,KAGJC,EAHI,OAIEN,mBAAS,IAJX,mBAIZO,EAJY,KAIPC,EAJO,OAKAR,mBAAS,IALT,mBAKZS,EALY,KAKRC,EALQ,KAuBnB,OAjBAC,qBACA,WACYC,MAAM,oDAAD,OAAqDb,EAAMc,SAA3D,4CACTC,MACJ,SAASC,GACL,OAAOA,EAAIC,UAElBF,MAAK,SAASG,GACXf,EAASgB,KAAKC,MAAMF,EAAKG,KAAKC,KAAK,MACnCjB,EAAWc,KAAKC,MAAMF,EAAKG,KAAKE,SAAS,MACzChB,EAAWY,KAAKC,MAAMF,EAAKG,KAAKG,SAAS,MACzCf,EAAQS,EAAKO,MAAMC,KACnBf,EAAOO,EAAKO,MAAMf,WAMlB,qCACI,uBAAMiB,UAAU,UAAUC,GAAG,YAA7B,UAAyC,mBAAGD,UAAU,qBAAqBE,cAAY,SAAY7B,EAAMc,SAAzG,IAAoHZ,EAApH,QAIA,qBAAKyB,UAAU,YAAf,SACI,wCAAWvB,EAAX,YAA6BE,EAA7B,UAEJ,uBAAMqB,UAAU,SAAhB,UAA0BnB,EAA1B,SAAwCE,EAAxC,eCFGoB,MA/Bf,WAAqB,IAAD,EACG7B,mBAAS,IADZ,mBACX8B,EADW,KACNC,EADM,OAEa/B,mBAAS,aAFtB,mBAEXgC,EAFW,KAEDC,EAFC,KAYhB,OACE,qCASI,sBAAKP,UAAU,YAAf,UACA,uBAAOA,UAAU,GAAGQ,KAAK,OAAOC,YAAY,oBAAoBC,aAAW,SAASC,SApB5F,SAAqBC,GACnBP,EAAQO,EAAEC,OAAOC,QAmBgGA,MAAOV,IAClH,wBAAQJ,UAAU,GAAGQ,KAAK,SAASO,QAlB3C,SAAoBH,GAClBA,EAAEI,iBACFT,EAAaH,GACba,QAAQC,IAAIZ,GACZD,EAAQ,KAcF,uBAEA,cAACc,EAAD,CAAShC,SAAUmB,QCNdc,MArBf,WAAiB,IAAD,EACW9C,mBAAS,GADpB,mBACL+C,EADK,KACCC,EADD,KAERC,EAAK,IAAIC,KAETC,EAAKF,EAAKG,SACdT,QAAQC,IAAIO,GACZ,IAAIE,EAAI,GAOL,MAVQ,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAIzCC,SAAQ,SAACC,EAAIC,GAChB,OAAOA,IAAML,EAAKE,EAAIE,EAAI,QAE9BE,aAAY,WACRT,EAASD,EAAM,KACjB,KAGK,qBAAKrB,UAAU,aAAf,SACH,iCAAQ2B,EAAR,OAAiBJ,EAAKS,WAAtB,QAAuCT,EAAKU,aAA5C,SAAgEV,EAAKW,aAArE,WCKOC,MAff,WACE,OACI,sBAAKnC,UAAU,UAAf,UACE,qBAAKA,UAAU,SAAf,SAAwB,qDAExB,sBAAKA,UAAU,YAAf,UACA,cAAC,EAAD,IACE,cAAC,EAAD,WCFKoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlD,MAAK,YAAkD,IAA/CmD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fc4d1af7.chunk.js","sourcesContent":["import react, { useEffect, useState } from \"react\"\r\n\r\nimport {Thermometer} from 'react-bootstrap-icons'\r\nfunction ApiCall(props){\r\n    const [entry,setentry]=useState(\"\")\r\n    const [maxTemp ,setmaxTemp]=useState(\"\")\r\n    const [minTemp,setminTemp]=useState(\"\")\r\n    const [long,setLong]=useState(\"\")\r\n    const [lat,setLat]=useState(\"\")\r\n    useEffect(\r\n    function tempchange(){\r\n    let rawdata=fetch(`http://api.openweathermap.org/data/2.5/weather?q=${props.cityName}&appid=420ddd5f335ad29e7a6f3d9dd895656b`)\r\n    rawdata.then(\r\n        function(res){\r\n            return res.json()\r\n        })\r\n    .then(function(data){\r\n        setentry(Math.floor(data.main.temp-273))\r\n        setmaxTemp(Math.floor(data.main.temp_max-273))\r\n        setminTemp(Math.floor(data.main.temp_min-273))\r\n        setLong(data.coord.lon)\r\n        setLat(data.coord.lat)\r\n        })\r\n    }\r\n    )\r\n   \r\n    return(\r\n        <>  \r\n            <span className=\"heading\" id=\"cityStyle\"><i className=\"fa fa-street-view \" aria-hidden=\"true\"></i>{props.cityName} {entry} C</span>\r\n            {/* <h1 className=\"Temp\">{entry} C</h1> */}\r\n            {/* < Thermometer className=\"Temp\" id=\"tempIcon\"/> */}\r\n            {/* <button className=\"apibutton\" onClick=\"apicall\">button</button> */}\r\n            <div className=\"MaxAndMin\">\r\n                <span>Max {maxTemp} C | Min {minTemp} C</span>\r\n            </div>\r\n            <span className=\"latLon\">{long}&#xb0;N {lat}&#xb0;E</span>\r\n        </>\r\n    )\r\n}\r\nexport default ApiCall","import react, { useState } from \"react\"\r\nimport ApiCall from \"./Api\"\r\nfunction SearchBox(){\r\n  const [city,setcity]=useState(\"\")\r\n  const [finalcity,setfinalcity]=useState(\"New Delhi\")\r\n  function inputchange(e){\r\n    setcity(e.target.value)\r\n  }\r\n  function finalInput(e){\r\n    e.preventDefault()\r\n    setfinalcity(city)\r\n    console.log(finalcity)\r\n    setcity(\"\")\r\n  }\r\n    return(\r\n      <>\r\n        {/* <nav className=\"navbar navbar-light bg-light\">\r\n            <div className=\"container-fluid container\">\r\n              <form className=\"d-flex\">\r\n                <input className=\"form-control me-2 font-weight-bold\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" onChange={inputchange} value={city}/>\r\n                <button className=\"btn btn-outline-success font-weight-bold\" type=\"submit\" onClick={finalInput}>Search</button>\r\n              </form>\r\n              </div>\r\n          </nav> */}\r\n          <div className=\"container\">\r\n          <input className=\"\" type=\"text\" placeholder=\"Type city name...\" aria-label=\"Search\" onChange={inputchange} value={city}/>\r\n          <button className=\"\" type=\"submit\" onClick={finalInput}>Search</button>\r\n          </div>\r\n          <ApiCall cityName={finalcity}/>\r\n          </>\r\n    )\r\n    \r\n}\r\nexport default SearchBox","import react,{useState} from \"react\"\r\nfunction Timer(){\r\n    const [count,setCount]=useState(0)\r\n    let date=new Date()\r\n    let dayArr=[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"]\r\n    let days=date.getDay()\r\n    console.log(days)\r\n    let day=\"\"\r\n    dayArr.forEach((val,ind)=>{\r\n        return ind===days?day=val:null\r\n    })\r\n    setInterval(function(){\r\n        setCount(count+1)\r\n    },1000)\r\n       return(\r\n           \r\n           <div className=\"timerStyle\">\r\n        <span >{day} |  {date.getHours()} hr| {date.getMinutes()} Mn|  {date.getSeconds()} s</span>\r\n        </div>\r\n       )\r\n       \r\n}\r\nexport default Timer","import 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport './App.css';\nimport SearchBox from \"./searchbox\"\nimport Timer from \"./timer\" \nimport ApiCall from \"./Api\"\nfunction App() {\n  return (\n      <div className=\"mainDiv\">\n        <div className=\"Header\"><h1 >React Weather App</h1></div>\n        \n        <div className=\"centerDiv\">\n        <Timer/>\n          <SearchBox/>\n          \n          \n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}